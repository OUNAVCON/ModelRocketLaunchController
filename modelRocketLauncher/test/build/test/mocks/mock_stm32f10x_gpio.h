/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STM32F10X_GPIO_H
#define _MOCK_STM32F10X_GPIO_H

#include "stm32f10x_gpio.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_stm32f10x_gpio_Init(void);
void mock_stm32f10x_gpio_Destroy(void);
void mock_stm32f10x_gpio_Verify(void);




#define GPIO_DeInit_Ignore() GPIO_DeInit_CMockIgnore()
void GPIO_DeInit_CMockIgnore(void);
#define GPIO_DeInit_Expect(GPIOx) GPIO_DeInit_CMockExpect(__LINE__, GPIOx)
void GPIO_DeInit_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx);
typedef void (* CMOCK_GPIO_DeInit_CALLBACK)(GPIO_TypeDef* GPIOx, int cmock_num_calls);
void GPIO_DeInit_StubWithCallback(CMOCK_GPIO_DeInit_CALLBACK Callback);
#define GPIO_AFIODeInit_Ignore() GPIO_AFIODeInit_CMockIgnore()
void GPIO_AFIODeInit_CMockIgnore(void);
#define GPIO_AFIODeInit_Expect() GPIO_AFIODeInit_CMockExpect(__LINE__)
void GPIO_AFIODeInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_GPIO_AFIODeInit_CALLBACK)(int cmock_num_calls);
void GPIO_AFIODeInit_StubWithCallback(CMOCK_GPIO_AFIODeInit_CALLBACK Callback);
#define GPIO_Init_Ignore() GPIO_Init_CMockIgnore()
void GPIO_Init_CMockIgnore(void);
#define GPIO_Init_Expect(GPIOx, GPIO_InitStruct) GPIO_Init_CMockExpect(__LINE__, GPIOx, GPIO_InitStruct)
void GPIO_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct);
typedef void (* CMOCK_GPIO_Init_CALLBACK)(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct, int cmock_num_calls);
void GPIO_Init_StubWithCallback(CMOCK_GPIO_Init_CALLBACK Callback);
#define GPIO_StructInit_Ignore() GPIO_StructInit_CMockIgnore()
void GPIO_StructInit_CMockIgnore(void);
#define GPIO_StructInit_Expect(GPIO_InitStruct) GPIO_StructInit_CMockExpect(__LINE__, GPIO_InitStruct)
void GPIO_StructInit_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_InitTypeDef* GPIO_InitStruct);
typedef void (* CMOCK_GPIO_StructInit_CALLBACK)(GPIO_InitTypeDef* GPIO_InitStruct, int cmock_num_calls);
void GPIO_StructInit_StubWithCallback(CMOCK_GPIO_StructInit_CALLBACK Callback);
#define GPIO_ReadInputDataBit_IgnoreAndReturn(cmock_retval) GPIO_ReadInputDataBit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_ReadInputDataBit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define GPIO_ReadInputDataBit_ExpectAndReturn(GPIOx, GPIO_Pin, cmock_retval) GPIO_ReadInputDataBit_CMockExpectAndReturn(__LINE__, GPIOx, GPIO_Pin, cmock_retval)
void GPIO_ReadInputDataBit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_GPIO_ReadInputDataBit_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, int cmock_num_calls);
void GPIO_ReadInputDataBit_StubWithCallback(CMOCK_GPIO_ReadInputDataBit_CALLBACK Callback);
#define GPIO_ReadInputData_IgnoreAndReturn(cmock_retval) GPIO_ReadInputData_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_ReadInputData_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define GPIO_ReadInputData_ExpectAndReturn(GPIOx, cmock_retval) GPIO_ReadInputData_CMockExpectAndReturn(__LINE__, GPIOx, cmock_retval)
void GPIO_ReadInputData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_GPIO_ReadInputData_CALLBACK)(GPIO_TypeDef* GPIOx, int cmock_num_calls);
void GPIO_ReadInputData_StubWithCallback(CMOCK_GPIO_ReadInputData_CALLBACK Callback);
#define GPIO_ReadOutputDataBit_IgnoreAndReturn(cmock_retval) GPIO_ReadOutputDataBit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_ReadOutputDataBit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define GPIO_ReadOutputDataBit_ExpectAndReturn(GPIOx, GPIO_Pin, cmock_retval) GPIO_ReadOutputDataBit_CMockExpectAndReturn(__LINE__, GPIOx, GPIO_Pin, cmock_retval)
void GPIO_ReadOutputDataBit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_GPIO_ReadOutputDataBit_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, int cmock_num_calls);
void GPIO_ReadOutputDataBit_StubWithCallback(CMOCK_GPIO_ReadOutputDataBit_CALLBACK Callback);
#define GPIO_ReadOutputData_IgnoreAndReturn(cmock_retval) GPIO_ReadOutputData_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void GPIO_ReadOutputData_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define GPIO_ReadOutputData_ExpectAndReturn(GPIOx, cmock_retval) GPIO_ReadOutputData_CMockExpectAndReturn(__LINE__, GPIOx, cmock_retval)
void GPIO_ReadOutputData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_GPIO_ReadOutputData_CALLBACK)(GPIO_TypeDef* GPIOx, int cmock_num_calls);
void GPIO_ReadOutputData_StubWithCallback(CMOCK_GPIO_ReadOutputData_CALLBACK Callback);
#define GPIO_SetBits_Ignore() GPIO_SetBits_CMockIgnore()
void GPIO_SetBits_CMockIgnore(void);
#define GPIO_SetBits_Expect(GPIOx, GPIO_Pin) GPIO_SetBits_CMockExpect(__LINE__, GPIOx, GPIO_Pin)
void GPIO_SetBits_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
typedef void (* CMOCK_GPIO_SetBits_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, int cmock_num_calls);
void GPIO_SetBits_StubWithCallback(CMOCK_GPIO_SetBits_CALLBACK Callback);
#define GPIO_ResetBits_Ignore() GPIO_ResetBits_CMockIgnore()
void GPIO_ResetBits_CMockIgnore(void);
#define GPIO_ResetBits_Expect(GPIOx, GPIO_Pin) GPIO_ResetBits_CMockExpect(__LINE__, GPIOx, GPIO_Pin)
void GPIO_ResetBits_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
typedef void (* CMOCK_GPIO_ResetBits_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, int cmock_num_calls);
void GPIO_ResetBits_StubWithCallback(CMOCK_GPIO_ResetBits_CALLBACK Callback);
#define GPIO_WriteBit_Ignore() GPIO_WriteBit_CMockIgnore()
void GPIO_WriteBit_CMockIgnore(void);
#define GPIO_WriteBit_Expect(GPIOx, GPIO_Pin, BitVal) GPIO_WriteBit_CMockExpect(__LINE__, GPIOx, GPIO_Pin, BitVal)
void GPIO_WriteBit_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal);
typedef void (* CMOCK_GPIO_WriteBit_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal, int cmock_num_calls);
void GPIO_WriteBit_StubWithCallback(CMOCK_GPIO_WriteBit_CALLBACK Callback);
#define GPIO_Write_Ignore() GPIO_Write_CMockIgnore()
void GPIO_Write_CMockIgnore(void);
#define GPIO_Write_Expect(GPIOx, PortVal) GPIO_Write_CMockExpect(__LINE__, GPIOx, PortVal)
void GPIO_Write_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t PortVal);
typedef void (* CMOCK_GPIO_Write_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t PortVal, int cmock_num_calls);
void GPIO_Write_StubWithCallback(CMOCK_GPIO_Write_CALLBACK Callback);
#define GPIO_PinLockConfig_Ignore() GPIO_PinLockConfig_CMockIgnore()
void GPIO_PinLockConfig_CMockIgnore(void);
#define GPIO_PinLockConfig_Expect(GPIOx, GPIO_Pin) GPIO_PinLockConfig_CMockExpect(__LINE__, GPIOx, GPIO_Pin)
void GPIO_PinLockConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);
typedef void (* CMOCK_GPIO_PinLockConfig_CALLBACK)(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, int cmock_num_calls);
void GPIO_PinLockConfig_StubWithCallback(CMOCK_GPIO_PinLockConfig_CALLBACK Callback);
#define GPIO_EventOutputConfig_Ignore() GPIO_EventOutputConfig_CMockIgnore()
void GPIO_EventOutputConfig_CMockIgnore(void);
#define GPIO_EventOutputConfig_Expect(GPIO_PortSource, GPIO_PinSource) GPIO_EventOutputConfig_CMockExpect(__LINE__, GPIO_PortSource, GPIO_PinSource)
void GPIO_EventOutputConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t GPIO_PortSource, uint8_t GPIO_PinSource);
typedef void (* CMOCK_GPIO_EventOutputConfig_CALLBACK)(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource, int cmock_num_calls);
void GPIO_EventOutputConfig_StubWithCallback(CMOCK_GPIO_EventOutputConfig_CALLBACK Callback);
#define GPIO_EventOutputCmd_Ignore() GPIO_EventOutputCmd_CMockIgnore()
void GPIO_EventOutputCmd_CMockIgnore(void);
#define GPIO_EventOutputCmd_Expect(NewState) GPIO_EventOutputCmd_CMockExpect(__LINE__, NewState)
void GPIO_EventOutputCmd_CMockExpect(UNITY_LINE_TYPE cmock_line, FunctionalState NewState);
typedef void (* CMOCK_GPIO_EventOutputCmd_CALLBACK)(FunctionalState NewState, int cmock_num_calls);
void GPIO_EventOutputCmd_StubWithCallback(CMOCK_GPIO_EventOutputCmd_CALLBACK Callback);
#define GPIO_PinRemapConfig_Ignore() GPIO_PinRemapConfig_CMockIgnore()
void GPIO_PinRemapConfig_CMockIgnore(void);
#define GPIO_PinRemapConfig_Expect(GPIO_Remap, NewState) GPIO_PinRemapConfig_CMockExpect(__LINE__, GPIO_Remap, NewState)
void GPIO_PinRemapConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t GPIO_Remap, FunctionalState NewState);
typedef void (* CMOCK_GPIO_PinRemapConfig_CALLBACK)(uint32_t GPIO_Remap, FunctionalState NewState, int cmock_num_calls);
void GPIO_PinRemapConfig_StubWithCallback(CMOCK_GPIO_PinRemapConfig_CALLBACK Callback);
#define GPIO_EXTILineConfig_Ignore() GPIO_EXTILineConfig_CMockIgnore()
void GPIO_EXTILineConfig_CMockIgnore(void);
#define GPIO_EXTILineConfig_Expect(GPIO_PortSource, GPIO_PinSource) GPIO_EXTILineConfig_CMockExpect(__LINE__, GPIO_PortSource, GPIO_PinSource)
void GPIO_EXTILineConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t GPIO_PortSource, uint8_t GPIO_PinSource);
typedef void (* CMOCK_GPIO_EXTILineConfig_CALLBACK)(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource, int cmock_num_calls);
void GPIO_EXTILineConfig_StubWithCallback(CMOCK_GPIO_EXTILineConfig_CALLBACK Callback);
#define GPIO_ETH_MediaInterfaceConfig_Ignore() GPIO_ETH_MediaInterfaceConfig_CMockIgnore()
void GPIO_ETH_MediaInterfaceConfig_CMockIgnore(void);
#define GPIO_ETH_MediaInterfaceConfig_Expect(GPIO_ETH_MediaInterface) GPIO_ETH_MediaInterfaceConfig_CMockExpect(__LINE__, GPIO_ETH_MediaInterface)
void GPIO_ETH_MediaInterfaceConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t GPIO_ETH_MediaInterface);
typedef void (* CMOCK_GPIO_ETH_MediaInterfaceConfig_CALLBACK)(uint32_t GPIO_ETH_MediaInterface, int cmock_num_calls);
void GPIO_ETH_MediaInterfaceConfig_StubWithCallback(CMOCK_GPIO_ETH_MediaInterfaceConfig_CALLBACK Callback);

#endif
